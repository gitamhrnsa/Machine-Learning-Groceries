knitr::opts_chunk$set(echo = TRUE, fig.align = "center", warning = F, message = F)
library(data.table)
library(ggplot2)
library(psych)
install.packages("psych")
library(data.table)
library(ggplot2)
library(GGally)
library(dplyr)
library(cowplot)
library(caret)
install.packages("caret")
library(data.table)
library(ggplot2)
library(GGally)
library(dplyr)
library(cowplot)
library(pROC)
library(ROCR)
library(MASS)
library(dummies)
install.packages("dummies")
library(class)
library(xgboost)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", warning = F, message = F)
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_0.4.10.tar.gz", repos = NULL, type="source")
updateR()
library(installr)
install.packages("installr")
library(caret)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", warning = F, message = F)
remove.packages(rlang)
nstall.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", warning = F, message = F)
library(caret)
knitr::opts_chunk$set(echo = TRUE)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(rlang)
sessionInfo()
remove.packages(rlang)
remove.packages(rlang)
detach("package:rlang", unload = TRUE)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("caret")
library(caret)
library(rlang)
detach("package:caret", unload = TRUE)
library(caret)
detach("package:caret", unload = TRUE)
library(caret)
detach("package:rlang", unload = TRUE)
library(rlang)
detach("package:rlang", unload = TRUE)
library(rlang)
detach("package:rlang", unload = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(rlang)
sessionInfo()
knitr::opts_chunk$set(echo = TRUE)
library(rlang)
sessionInfo()
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", out.width = "80%")
options(scipen = 99)
library(caret)
library(rlang)
library(caret)
library(rlang)
library(caret)
library(htmltools)
detach("package:htmltools", unload = TRUE)
install.packages("caret")
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", out.width = "80%")
options(scipen = 99)
library(rlang)
library(caret)
library(dplyr)
library(gmodels)
install.packages("gmodels")
library(gmodels)
library(ggplot2)
library(class)
library(tidyr)
library(GGally)
install.packages("GGally")
library(GGally)
theme_set(theme_minimal() +
theme(legend.position = "top"))
options(scipen = 999)
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", out.width = "80%")
options(scipen = 99)
wholesale <- read.csv("wholesale.csv")
wholesale <- read.csv("wholesale.csv")
str(wholesale)
colSums(is.na(wholesale))
ggcorr(wholesale)
wholesale <- wholesale %>%
select(-c("Region"))
#Set a random number as the seed
set.seed(123)
index <- sample(nrow(wholesale), nrow(wholesale)*0.8)
data_train <- wholesale[index, ]
data_test <-wholesale[-index,]
data_train_glm <- data_train  %>%
mutate_at("Channel", as.factor)
data_test_glm <- data_test  %>%
mutate_at("Channel", as.factor)
table(as.factor(data_train$Channel))
data_train <- data_train %>% mutate_at("Channel", as.factor)
data_train <- upSample(x= data_train %>% select(-c("Channel")),
y= data_train$Channel, list = F,
yname = "Channel")
table(data_train$Channel)
summary(data_train)
plot(as.factor(data_train$Channel), data_train$Fresh)
train_x <- data_train %>%
select(-Channel) %>%
scale()
train_y <- as.factor(data_train$Channel)
test_x <- data_test %>%
select(-Channel) %>%
scale(center = attr(train_x,"scaled:center"),
scale = attr(train_x, "scaled:scale")
)
test_y <- as.factor(data_test$Channel)
model_wholesale <- glm(Channel ~ ., data_train_glm, family = "binomial")
model_step <- step(model_wholesale, direction="both", trace=0)
summary(model_step)
pred_train <- predict(model_step, data_train_glm, type="response")
pred_train <- ifelse(pred_train > 0.5, 2, 1) %>% as.factor
confusionMatrix(pred_train, data_train_glm$Channel)
predict_glm <- predict(model_step, data_test_glm, type="response")
predict_glm <- ifelse(predict_glm > 0.5, 2, 1) %>% as.factor
predict_glm
confusionMatrix(predict_glm, data_test_glm$Channel)
install.packages("e1071")
pred_train <- predict(model_step, data_train_glm, type="response")
pred_train <- ifelse(pred_train > 0.5, 2, 1) %>% as.factor
confusionMatrix(pred_train, data_train_glm$Channel)
predict_glm <- predict(model_step, data_test_glm, type="response")
predict_glm <- ifelse(predict_glm > 0.5, 2, 1) %>% as.factor
predict_glm
confusionMatrix(predict_glm, data_test_glm$Channel)
modelknn <- knn3(train_x,
train_y,
k = sqrt(nrow(train_x)))
predknn <- predict(modelknn, test_x, type="class")
predknn <- knn3Train(train_x,
test_x,
train_y,
k = sqrt(nrow(train_x)) %>% round()) %>%
as.factor()
head(predknn)
confusionMatrix(predknn, test_y)
